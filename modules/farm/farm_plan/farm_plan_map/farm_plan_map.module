<?php

/**
 * @file
 * Farm plan map module.
 */

// Include Features code.
include_once 'farm_plan_map.features.inc';

/**
 * Implements hook_page_build().
 */
function farm_plan_map_page_build(&$page) {

  // Get the current path.
  $path = current_path();

  // Break it up into parts.
  $path_parts = explode('/', $path);

  // If this is not a plan path, bail.
  if (count($path_parts) < 3 || !($path_parts[0] == 'farm' && $path_parts[1] == 'plan' && empty($path_parts[3]))) {
    return;
  }

  // Attempt to load the plan. Bail if unsuccessful.
  $plan = menu_get_object('farm_plan', 2);
  if (empty($plan)) {
    return;
  }

  // Check to see if there are areas and/or assets associated with the plan.
  // If there are none, bail - we won't show a map.
  $plan_areas = farm_plan_linked_records('area', $plan->id);
  $plan_assets = farm_plan_linked_records('asset', $plan->id);
  if (empty($plan_areas) && empty($plan_assets)) {
    return;
  }

  // Add the plan ID as a Javascript setting, so that the farm_plan_map_layers
  // InlineJS component can add it to the GeoJSON URLs.
  drupal_add_js(array('farm_plan_map' => array('plan_id' => $plan->id)), 'setting');

  // Build the areas map and add it to the page content.
  $page['content']['farm_areas'] = farm_map_build('farm_plan_map');

  // Set the weight to 100 so that it appears on bottom.
  $page['content']['farm_areas']['#weight'] = 100;

  // Set the content region #sorted flag to FALSE so that it resorts.
  $page['content']['#sorted'] = FALSE;
}

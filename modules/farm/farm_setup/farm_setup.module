<?php
/**
 * @file
 * Farm setup module.
 */

/**
 * Implements hook_hook_info().
 */
function farm_setup_hook_info() {
  $hooks['farm_setup_forms'] = array(
    'group' => 'farm_setup',
  );
  return $hooks;
}

/**
 * Implements hook_permission().
 */
function farm_setup_permission() {
  return array(
    'access farm setup' => array(
      'title' => t('Access farm setup'),
      'description' => t('Change farmOS configurations via the farm setup wizard.'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * Implements hook_farm_access_perms().
 */
function farm_setup_farm_access_perms($role) {
  $perms = array();

  // Load the list of farm roles.
  $roles = farm_access_roles();

  // If this role has 'config' access, allow them to use the setup wizard.
  if (!empty($roles[$role]['access']['config'])) {
    $perms[] = 'access farm setup';
  }

  return $perms;
}

/**
 * Implements hook_menu().
 */
function farm_setup_menu() {

  // Start with an empty menu items array.
  $items = array();

  // Create the root setup page callback.
  $items['farm/setup'] = array(
    'title' => 'Setup',
    'page callback' => 'farm_setup_page',
    'access arguments' => array('access farm setup'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'user-menu',
    'weight' => 90,
  );

  // Create a default menu tab.
  $items['farm/setup/start'] = array(
    'title' => 'Start',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -100,
  );

  // Ask for setup forms from modules.
  $forms = farm_setup_forms();

  // Add a menu item for each form.
  foreach ($forms as $name => $form) {

    // Build a menu item definition.
    $menu_item = array(
      'title' => $form['label'],
      'page callback' => 'farm_setup_form_page',
      'page arguments' => array($form['label'], $form['form']),
      'access arguments' => array('access farm setup'),
      'type' => MENU_LOCAL_TASK,
      'weight' => $form['weight'],
    );

    // If the setup form code is in a separate file, add that information
    // to the menu item so Drupal knows where to look.
    if (!empty($form['file']) && !empty($form['module'])) {
      $menu_item['file'] = $form['file'];
      $menu_item['file path'] = drupal_get_path('module', $form['module']);
    }

    // Add a menu item.
    $items['farm/setup/' . $name] = $menu_item;
  }

  // Return menu items.
  return $items;
}

/**
 * Setup start page callback.
 */
function farm_setup_page() {
  drupal_set_title(t('farmOS Setup'));
  return array(
    '#type' => 'markup',
    '#markup' => '<p>' . t('This setup wizard will guide you through the process of configuring your farmOS.') . '</p>',
  );
}

/**
 * Setup form page callback.
 */
function farm_setup_form_page($title, $form_id) {
  drupal_set_title(t('Setup') . ': ' . $title);
  return drupal_get_form($form_id);
}

/**
 * Load information about all setup forms provided by other modules.
 */
function farm_setup_forms() {

  // Ask modules for setup forms.
  $forms = array();
  $modules = module_implements('farm_setup_forms');
  foreach ($modules as $module) {
    $module_forms = module_invoke($module, 'farm_setup_forms');
    foreach ($module_forms as &$form) {
      $form['module'] = $module;
      // Default to the module_name.farm_setup.inc file
      // This is used when adding the menu item.
      $form['file'] = !empty($form['file']) ? $form['file'] : $module . '.farm_setup.inc';
      $form['weight'] = !empty($form['weight']) ? $form['weight'] : 0;
    }
    $forms = array_merge($forms, $module_forms);
  }

  // Sort the setup forms.
  uasort($forms, 'farm_setup_forms_sort');

  // Return the array of setup forms.
  return $forms;
}

/**
 * Sort function for setup form definitions.
 */
function farm_setup_forms_sort($a, $b) {
  if ($a['weight'] == $b['weight']) {
    return 0;
  }
  return ($a['weight'] < $b['weight']) ? -1 : 1;
}
